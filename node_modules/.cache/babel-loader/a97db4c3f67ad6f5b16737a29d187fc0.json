{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jabina\\\\Downloads\\\\proshop_mern-master\\\\quickcart_project\\\\frontend\\\\src\\\\Pages\\\\PaymentPage.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder, payOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET, ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport axios from 'axios';\n\nconst PlaceOrderPage = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const [sdkReady, setSdkReady] = useState(false);\n  const [clientId, setClientId] = useState('');\n  const [showPayPal, setShowPayPal] = useState(false);\n  const cart = useSelector(state => state.cart);\n\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2);\n  const orderCreate = useSelector(state => state.orderCreate);\n  const {\n    order,\n    success,\n    error\n  } = orderCreate;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  useEffect(() => {\n    if (success) {\n      const fetchClientId = async () => {\n        const {\n          data: clientId\n        } = await axios.get('/api/config/paypal');\n        setClientId(clientId);\n        setShowPayPal(true);\n      };\n\n      fetchClientId();\n    }\n  }, [success]);\n\n  const placeOrderHandler = () => {\n    dispatch(createOrder({\n      orderItems: cart.cartItems,\n      shippingAddress: cart.shippingAddress,\n      paymentMethod: cart.paymentMethod,\n      itemsPrice: cart.itemsPrice,\n      shippingPrice: cart.shippingPrice,\n      taxPrice: cart.taxPrice,\n      totalPrice: cart.totalPrice\n    }));\n  };\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrder(order._id, paymentResult));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CheckoutSteps, {\n    step1: true,\n    step2: true,\n    step3: true,\n    step4: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Address:\"), cart.shippingAddress.address, \", \", cart.shippingAddress.city, ' ', cart.shippingAddress.postalCode, \",\", ' ', cart.shippingAddress.country)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Payment Method\"), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Method: \"), cart.paymentMethod), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Order Items\"), cart.cartItems.length === 0 ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Your cart is empty\") : /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, cart.cartItems.map((item, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    alt: item.name,\n    fluid: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 27\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, item.qty, \" x $\", item.price, \" = $\", (item.qty * item.price).toFixed(2))))))))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Order Summary\")), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, \"Items\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"$\", cart.itemsPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, \"$\", cart.shippingPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, \"Tax\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, \"$\", cart.taxPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"$\", cart.totalPrice))), error && /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, error)), !success && /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn-block\",\n    disabled: cart.cartItems === 0,\n    onClick: placeOrderHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, \"Place Order\")), showPayPal && clientId && /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PayPalScriptProvider, {\n    options: {\n      'client-id': clientId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PayPalButtons, {\n    amount: order.totalPrice,\n    onApprove: (data, actions) => {\n      return actions.order.capture().then(details => successPaymentHandler(details));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\nexport default PlaceOrderPage;","map":{"version":3,"sources":["C:/Users/Jabina/Downloads/proshop_mern-master/quickcart_project/frontend/src/Pages/PaymentPage.jsx"],"names":["React","useEffect","useState","Link","Button","Row","Col","ListGroup","Image","Card","useDispatch","useSelector","Message","CheckoutSteps","createOrder","payOrder","ORDER_CREATE_RESET","ORDER_PAY_RESET","PayPalScriptProvider","PayPalButtons","axios","PlaceOrderPage","history","dispatch","sdkReady","setSdkReady","clientId","setClientId","showPayPal","setShowPayPal","cart","state","addDecimals","num","Math","round","toFixed","itemsPrice","cartItems","reduce","acc","item","price","qty","shippingPrice","taxPrice","Number","totalPrice","orderCreate","order","success","error","orderPay","loading","loadingPay","successPay","fetchClientId","data","get","placeOrderHandler","orderItems","shippingAddress","paymentMethod","successPaymentHandler","paymentResult","_id","address","city","postalCode","country","length","map","index","image","name","product","actions","capture","then","details"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder, payOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET, ORDER_PAY_RESET } from '../constants/orderConstants'\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js'\nimport axios from 'axios'\n\nconst PlaceOrderPage = ({ history }) => {\n  const dispatch = useDispatch()\n  const [sdkReady, setSdkReady] = useState(false)\n  const [clientId, setClientId] = useState('')\n  const [showPayPal, setShowPayPal] = useState(false)\n\n  const cart = useSelector((state) => state.cart)\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  useEffect(() => {\n    if (success) {\n      const fetchClientId = async () => {\n        const { data: clientId } = await axios.get('/api/config/paypal')\n        setClientId(clientId)\n        setShowPayPal(true)\n      }\n      fetchClientId()\n    }\n  }, [success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(order._id, paymentResult))\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {error && (\n                <ListGroup.Item>\n                  <Message variant='danger'>{error}</Message>\n                </ListGroup.Item>\n              )}\n\n              {!success && (\n                <ListGroup.Item>\n                  <Button\n                    type='button'\n                    className='btn-block'\n                    disabled={cart.cartItems === 0}\n                    onClick={placeOrderHandler}\n                  >\n                    Place Order\n                  </Button>\n                </ListGroup.Item>\n              )}\n\n              {showPayPal && clientId && (\n                <ListGroup.Item>\n                  <PayPalScriptProvider options={{ 'client-id': clientId }}>\n                    <PayPalButtons\n                      amount={order.totalPrice}\n                      onApprove={(data, actions) => {\n                        return actions.order\n                          .capture()\n                          .then((details) =>\n                            successPaymentHandler(details)\n                          )\n                      }}\n                    />\n                  </PayPalScriptProvider>\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderPage\n"]},"metadata":{},"sourceType":"module"}